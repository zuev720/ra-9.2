{"version":3,"sources":["Components/MainPage/MainPage.jsx","Hooks/useJsonFetch.jsx","Components/Button/Button.jsx","Components/TextArea/TextArea.jsx","Components/PostCreatePage/PostCreatePage.jsx","Components/PostPage/PostPage.jsx","Components/EditPostPage/EditPostPage.jsx","Components/ErrorPage/ErrorPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["MainPage","history","useHistory","CreatePostBlock","className","to","Post","props","date","moment","create","format","dateFromNow","fromNow","error","replace","src","img","alt","name","pathname","id","propsSearch","content","Posts","loading","data","map","elem","PostsPage","url","opt","useState","setLoading","setData","setError","useEffect","fetch","then","result","json","useJsonFetch","process","method","Button","onClick","children","TextArea","value","onChange","PostCreatePage","state","setState","handleCreatePostButton","a","trim","obj","body","JSON","stringify","status","push","e","target","PostPage","post","location","handlePostDeleteButton","type","EditPostPage","textAreaValue","setTextAreaValue","handleChangePostClick","focus","ErrorPage","App","basename","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cf5004c.chunk.js","sourcesContent":["import React from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport moment from 'moment';\nimport {useJsonFetch} from '../../Hooks/useJsonFetch';\n\nexport function MainPage() {\n    const history = useHistory();\n\n    const CreatePostBlock = () =>\n        <div className={'CreatePostBlock'}>\n            <Link to={'/posts/new'} className={'createPostButton'}>Создать пост</Link>\n        </div>\n\n    const Post = (props) => {\n        const date = moment(props.create).format('YYYYMMDD');\n        const dateFromNow = moment(date, 'YYYYMMDD').fromNow();\n        return (\n            <li className={'Post'}>\n                {props.error && history.replace('/error')}\n                <div className={'UserInfoBlock'}>\n                    <img className={'UserImage'} src={props.img} alt={'user'}/>\n                    <div className={'PostInfoBlock'}>\n                        <p className={'UserName'}>{props.name}</p>\n                        <p className={'created'}>{dateFromNow}</p>\n                    </div>\n                </div>\n                <Link to={{\n                    pathname: `/posts/${props.id}`,\n                    propsSearch: props}\n                } className={'TextPostBlock'}>\n                    <p className={'TextPost'}>{props.content}</p>\n                </Link>\n            </li>\n        )\n    }\n\n    const Posts = (props) =>\n        <ul>\n            {props.loading && <p>...Loading</p>}\n            {(props.data) && props.data.map((elem) => <Post\n                key={elem.id}\n                id={elem.id}\n                img={elem.img}\n                name={elem.name}\n                content={elem.content}\n                create={elem.create}\n            />)}\n        </ul>\n\n    const PostsPage = () => {\n        const [loading, data, error] = useJsonFetch(process.env.REACT_APP_PUBLIC_URL, {method: 'GET'});\n\n        return (\n            <div className={'PostsPage'}>\n                <CreatePostBlock/>\n                <Posts loading={loading} data={data} error={error}/>\n            </div>\n        )\n    }\n\n    return (\n        <PostsPage/>\n    )\n}\n","import {useEffect, useState} from 'react';\n\nexport function useJsonFetch(url, opt) {\n    const [loading, setLoading] = useState(false);\n    const [data, setData] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setLoading({loading: true});\n        try {\n            fetch(url, opt)\n                .then((result) => result.json())\n                .then((result) => setData(result))\n        } catch (error) {\n            setError(error);\n        } finally {\n            setLoading(false);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return [loading, data, error];\n}\n","import React from 'react';\n\nexport function Button (props) {\n    return(<button className={props.className} onClick={props.onClick}>{props.children}</button>)\n}\n","import React from 'react';\n\nexport function TextArea (props) {\n    return(<textarea name={props.className} className={props.className} value={props.value} onChange={props.onChange} />)\n}\n","import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {Button} from '../Button/Button';\nimport './PostCreatePage.css';\nimport {TextArea} from '../TextArea/TextArea';\n\nexport function PostCreatePage() {\n    const history = useHistory();\n    const [state, setState] = useState('');\n    const handleTextArea = (e) => setState(e.target.value);\n\n    const handleCreatePostButton = async () => {\n        if (state.trim() === '') return null;\n        const obj = {id: 0, content: state.trim()};\n        await fetch(process.env.REACT_APP_PUBLIC_URL, {method: 'POST', body: JSON.stringify(obj)}).then((result) => {\n            if (result.status === 204) {\n                history.push(`/`);\n            } else {\n                history.push(`/error`);\n            }\n        });\n    }\n\n    const handleLeaveCreatePageButton = () => history.push(`/`);\n\n    return (\n        <div className={'PostCreatePage'}>\n            <TextArea className={'CreatePostTextArea'} value={state} onChange={handleTextArea} />\n            <Button className={'LeaveCreatePageButton'} onClick={handleLeaveCreatePageButton}>&#10008;</Button>\n            <Button className={'CreatePostButton'} onClick={handleCreatePostButton}>Создать пост</Button>\n        </div>\n    )\n}\n","import React from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport './PostPage.css';\nimport moment from 'moment';\n\nexport function PostPage(props) {\n    const history = useHistory();\n    const post = props.location.propsSearch;\n    if (!post) history.push(`/error`);\n\n    const handlePostDeleteButton = async () => {\n        await fetch(process.env.REACT_APP_PUBLIC_URL + post.id, {method: 'DELETE'}).then((result) => {\n            if (result.status === 204) {\n                history.push(`/`);\n            } else {\n                history.push(`/error`);\n            }\n        });\n    }\n\n    const date = moment(post.create).format('YYYYMMDD');\n    const dateFromNow = moment(date, 'YYYYMMDD').fromNow();\n\n    return(\n        <div className={'PostPage'}>\n            <div className={'UserInfoBlock'}>\n                <img className={'UserImage'} src={post.img} alt={'user'}/>\n                <div className={'PostInfoBlock'}>\n                    <p className={'UserName'}>{post.name}</p>\n                    <p className={'created'}>{dateFromNow}</p>\n                </div>\n            </div>\n            <div className={'TextPostBlock'}>\n                <p className={'TextPost'}>{post.content}</p>\n            </div>\n            <div className={'PostButtonsBlock'}>\n                <Link to={{\n                    pathname: `/posts/edit/${post.id}`,\n                    propsSearch: post\n                }} className={'PostChange'}>Изменить</Link>\n                <button type={'button'} className={'PostDelete'} onClick={handlePostDeleteButton}>Удалить</button>\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport {Link, useHistory} from 'react-router-dom';\nimport {TextArea} from '../TextArea/TextArea';\nimport {Button} from '../Button/Button';\nimport './EditPostPage.css';\n\nexport function EditPostPage(props) {\n    const history = useHistory();\n    const post = props.location.propsSearch;\n    if (!post) history.push(`/error`);\n    const [textAreaValue, setTextAreaValue] = useState(post.content);\n    const handleTextArea = (e) => setTextAreaValue(e.target.value);\n\n    const handleChangePostClick = async () => {\n        const obj = {id: post.id, content: textAreaValue};\n        await fetch(process.env.REACT_APP_PUBLIC_URL, {method: 'POST', body: JSON.stringify(obj)}).then((result) => {\n            if (result.status === 204) {\n                history.replace(`/`);\n            } else {\n                history.replace(`/error`);\n            }\n        });\n    };\n\n    return (\n        <div className={'EditPostPage'}>\n            <div className={'HeaderBlock'}>\n                <h3 className={'header'}>Редактировать публикацию</h3>\n            </div>\n            <Link to={{\n                pathname: `/posts/${post.id}`,\n                propsSearch: post\n            }} className={'LeaveEditPageButton'}>&#10008;</Link>\n            <TextArea className={'EditTextArea'} value={textAreaValue} onChange={handleTextArea} focus={true}/>\n            <Button className={'PostChangeButton'} onClick={handleChangePostClick}>Сохранить</Button>\n        </div>\n    )\n}\n","import React from 'react';\nimport './ErrorPage.css';\n\nexport function ErrorPage() {\n    return(\n        <div className={'ErrorPage'}>\n            <h1 className={'ErrorPageText'}>Страница не найдена</h1>\n        </div>\n    )\n}\n","import {\n    BrowserRouter as Router,\n    Switch,\n    Route, Redirect,\n} from \"react-router-dom\";\nimport {MainPage} from './Components/MainPage/MainPage';\nimport './App.css';\nimport {PostCreatePage} from './Components/PostCreatePage/PostCreatePage';\nimport {PostPage} from './Components/PostPage/PostPage';\nimport {EditPostPage} from './Components/EditPostPage/EditPostPage';\nimport {ErrorPage} from './Components/ErrorPage/ErrorPage';\n\nfunction App() {\n    return (\n        <Router basename={'/ra-9.2'}>\n            <div className={'App'}>\n                <Switch>\n                    <Route path={'/posts/edit/:id'} component={EditPostPage}/>\n                    <Route path={'/posts/new'} component={PostCreatePage}/>\n                    <Route path={'/posts/:id'} component={(props) => <PostPage {...props}/>}/>\n                    <Route path={'/error'} component={ErrorPage}/>\n                    <Route exact={true} path={'/posts'} component={MainPage}/>\n                    <Redirect to={'/posts'} />\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}